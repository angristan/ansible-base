---
- name: Setup locales
  locale_gen:
    name: '{{ item }}'
    state: present
  with_items:
    - en_US.UTF-8
    - fr_FR.UTF-8

- name: Set timezone to Europe/Paris
  timezone:
    name: Europe/Paris

- name: Add sources.list
  template:
    src: 'etc/apt/sources.list.j2'
    dest: '/etc/apt/sources.list'
  notify: update_apt_cache

- name: Install basic packages
  apt:
    name:
      - fish
      - vim
      - git
      - tmux
      - nano
      - htop
      - curl
      - wget
      - sudo
      - strace
      - iftop
      - jnettop
      - iotop
      - nload
      - ioping
      - reptyr
      - tree
      - ncdu
      - zip
      - unzip
      - time
      - dialog
      - apt-utils
      - screen
      - vnstat
      - man-db
      - python-pip
      - python3-pip
      - dnsutils
      - telnet
      - tcpdump
      - traceroute
      - mtr
      - nmap
      - lsof
      - apt-transport-https
      - pigz
      - uptimed
      - ethstatus
      - ca-certificates
      - logrotate
      - rsyslog
      - net-tools

- name: Set fish as the root shell
  user:
    name: root
    shell: /usr/bin/fish

- name: Add dotfiles
  copy:
    src: 'root/{{ item }}'
    dest: '/root/'
  with_items:
    - .config

- name: Add config.fish
  template:
    src: root/.config/fish/config.fish.j2
    dest: /root/.config/fish/config.fish

- name: Add rsyslog logrotate without delaycompress
  template:
    src: 'etc/logrotate.d/rsyslog.j2'
    dest: '/etc/logrotate.d/rsyslog'

- name: Install APT dependencies for MOTD
  apt:
    name:
      - figlet
      - ruby

- name: Install Ruby dependencies for MOTD
  gem:
    name: lolcat
    user_install: no

- name: Copy MOTD scripts
  copy:
    src: 'etc/update-motd.d/{{ item }}'
    dest: '/etc/update-motd.d'
    mode: +x
  with_items:
    - 10-hostname
    - 20-sysinfo
    # - 30-apt

- name: Make sure /etc/motd is empty
  copy:
    content: ''
    dest: '/etc/motd'

- name: Install unbound
  when: ansible_distribution == "Debian"
  apt:
    name: unbound

- name: Add Unbound config
  when: ansible_distribution == "Debian"
  template:
    src: 'etc/unbound/unbound.conf.j2'
    dest: '/etc/unbound/unbound.conf'
  notify: unbound restart

- name: Set DNS resolver to Unbound in DHCP config
  when: ansible_distribution == "Debian"
  lineinfile:
    dest: /etc/dhcp/dhclient.conf
    regexp: '^prepend domain-name-servers'
    line: 'prepend domain-name-servers 127.0.0.1;'

- name: Add vimrc
  get_url:
    url: https://raw.githubusercontent.com/wklken/vim-for-server/master/vimrc
    dest: /root/.vimrc

- name: Add password to root user
  user:
    name: root
    password: '{{ vault.root_password }}'

- name: Add stanislas user
  user:
    name: stanislas
    groups: ['sudo']
    shell: /usr/bin/fish
    password: '{{ vault.stanislas_password }}'

- name: Creates /home/stanislas/.ssh/ directory
  file:
    path: /home/stanislas/.ssh/
    state: directory
    owner: stanislas
    group: stanislas

- name: Set up SSH authorized keys
  template:
    src: 'ssh/authorized_keys.j2'
    dest: '{{ item }}'
  with_items:
    - /root/.ssh/authorized_keys
    - /home/stanislas/.ssh/authorized_keys

- name: Install basic packages
  apt:
    name:
      - fail2ban
      - haveged
      - netdata

- name: Set swappiness to 0
  sysctl:
    name: vm.swappiness
    value: '0'
    state: present
    reload: yes

- name: Configure private network interface
  template:
    src: 'etc/network/interfaces.d/priv.cfg.j2'
    dest: '/etc/network/interfaces.d/priv.cfg'
  when: private_network_address is defined
  notify: network restart
  tags: base.network

- name: Configure private network interface
  template:
    src: 'etc/udev/rules.d/75-persistent-net-generator.rules.j2'
    dest: '/etc/udev/rules.d/75-persistent-net-generator.rules'
  when: private_network_interface_mac is defined
  tags: base.network
